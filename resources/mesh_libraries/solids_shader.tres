[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://dol5hgap152nu"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_hmlli"]
output_port_for_preview = 0
parameter_name = "intensity"
hint = 1
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_dr45s"]
parameter_name = "is_in_view"
default_value_enabled = true
default_value = true

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_ch83k"]
default_input_values = [0, false, 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 4

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_3weae"]
output_port_for_preview = 0
input_name = "color"

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_nor4m"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_5w2j8"]
constant = Color(0, 0, 0, 1)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_qkkwd"]
input_name = "output_is_srgb"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_yyq1w"]
input_name = "color"

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_k18tn"]
function = 3

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform bool is_in_view = true;
uniform float intensity : hint_range(0, 1) = 1;



void fragment() {
// BooleanParameter:11
	bool n_out11p0 = is_in_view;


// Input:13
	vec4 n_out13p0 = COLOR;


// FloatParameter:10
	float n_out10p0 = intensity;


// MultiplyAdd:14
	vec3 n_in14p2 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out14p0 = fma(vec3(n_out13p0.xyz), vec3(n_out10p0), n_in14p2);


// Input:3
	vec4 n_out3p0 = COLOR;


	vec3 n_out4p0;
// ColorFunc:4
	{
		vec3 c = vec3(n_out3p0.xyz);
		float r = (c.r * .393) + (c.g *.769) + (c.b * .189);
		float g = (c.r * .349) + (c.g *.686) + (c.b * .168);
		float b = (c.r * .272) + (c.g *.534) + (c.b * .131);
		n_out4p0 = vec3(r, g, b);
	}


	vec3 n_out12p0;
// Switch:12
	n_out12p0 = mix(n_out4p0, n_out14p0, float(n_out11p0));


// Output:0
	ALBEDO = n_out12p0;


}
"
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_yyq1w")
nodes/fragment/3/position = Vector2(-720, 60)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorFunc_k18tn")
nodes/fragment/4/position = Vector2(-340, 100)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatParameter_hmlli")
nodes/fragment/10/position = Vector2(-660, 500)
nodes/fragment/11/node = SubResource("VisualShaderNodeBooleanParameter_dr45s")
nodes/fragment/11/position = Vector2(-720, -120)
nodes/fragment/12/node = SubResource("VisualShaderNodeSwitch_ch83k")
nodes/fragment/12/position = Vector2(160, -20)
nodes/fragment/13/node = SubResource("VisualShaderNodeInput_3weae")
nodes/fragment/13/position = Vector2(-1160, 320)
nodes/fragment/14/node = SubResource("VisualShaderNodeMultiplyAdd_nor4m")
nodes/fragment/14/position = Vector2(-140, 260)
nodes/fragment/15/node = SubResource("VisualShaderNodeColorConstant_5w2j8")
nodes/fragment/15/position = Vector2(127.542, 385.086)
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_qkkwd")
nodes/fragment/16/position = Vector2(-20, 580)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 11, 0, 12, 0, 4, 0, 12, 2, 13, 0, 14, 0, 14, 0, 12, 1, 12, 0, 0, 0, 10, 0, 14, 1)
